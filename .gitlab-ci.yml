name: Build and Release Electron App

on:
  push:
    tags:
      - '*'  # Triggers the workflow on any tag push

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        node-version: [18.x]

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install --production=false

      - name: Set up environment variables
        run: |
          echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.REACT_APP_FIREBASE_API_KEY }}" >> $GITHUB_ENV
          echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV
          echo "REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}" >> $GITHUB_ENV
          echo "REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}" >> $GITHUB_ENV
          echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> $GITHUB_ENV
          echo "REACT_APP_FIREBASE_APP_ID=${{ secrets.REACT_APP_FIREBASE_APP_ID }}" >> $GITHUB_ENV
          echo "REACT_APP_FIREBASE_MEASUREMENT_ID=${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}" >> $GITHUB_ENV
          echo "REACT_APP_FIREBASE_DATABASE_URL=${{ secrets.REACT_APP_FIREBASE_DATABASE_URL }}" >> $GITHUB_ENV
          echo "GH_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV

      - name: Build Electron App
        shell: bash  # Ensure Bash is used for macOS
        run: |
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            yarn electron:build --mac
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            yarn electron:build --win
          fi

      - name: Upload Build Artifacts for Debugging
        uses: actions/upload-artifact@v3
        with:
          name: Electron-${{ matrix.os }}
          path: dist/
          retention-days: 7

      - name: Publish to GitHub Releases
        if: ${{ matrix.os == 'macos-latest' }}
        shell: bash  # Ensure Bash is used
        run: |
          DEBUG=electron-builder yarn electron:publish --publish=always